name: Synopsys

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    env:
      LINUX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-action/0.1.59/ci-package-0.1.59-linux64.zip"
      MACOSX_BRIDGE_URL: "https://artifactory.internal.synopsys.com/artifactory/clops-local/clops.sig.synopsys.com/synopsys-action/0.1.59/ci-package-0.1.59-macosx.zip"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

    #- name: Synopsys Application Security Testing
    #    uses: synopsys-sig/synopsys-action@main
    #    with:
    #      polaris_serverUrl: ${{ secrets.POLARIS_SEVER_URL }}
    #      polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
    #      polaris_application_name: "testapp1"
    #      polaris_project_name: "testproj1"
    #      polaris_assessment_types: '["SAST"]'
    #       bridge_download_url: ${{ env.LINUX_BRIDGE_URL }}

      - name: Synopsys Application Security Testing
        uses: synopsys-sig/synopsys-action@main
        with:
          #polaris_serverUrl: ${{ secrets.POLARIS_URL }}
          #polaris_accessToken: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          #polaris_application_name: "jc-hello-java-demo"
          #polaris_project_name: "jc-hello-java-demo"
          #polaris_assessment_types: '["SAST", "SCA"]'

          #blackduck_url: ${{ secrets.BLACKDUCK_URL }}
          #blackduck_apiToken: ${{ secrets.BLACKDUCK_TOKEN }}

          coverity_url: ${{ secrets.COVERITY_URL }}
          coverity_user: ${{ secrets.COVERITY_USER }}
          coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
          coverity_project_name: ${{ github.event.repository.name }}
          coverity_stream_name: ${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}

          synopsys_bridge_path: /tmp/synopsys-bridge
          bridge_download_url: ${{ env.MACOSX_BRIDGE_URL }}
